/**

@page propagation Propagation
@tableofcontents


@section imu_measurements IMU Measurements

We use a 6-axis inertial measurement unit (IMU) to propagate the inertial navigation system (INS),
which provides measurements of the local rotational velocity (angular rate) \f$\boldsymbol{\omega}_m\f$ and
local translational acceleration \f$\mathbf{a}_m\f$:

\f{align*}{
    {}^I\boldsymbol{\omega}_m(t) &= {}^I\boldsymbol{\omega}(t) + \mathbf{b}_{g}(t) + \mathbf{n}_{{g}}(t)\\
    {}^I\mathbf{a}_m(t) &= {}^I\mathbf{a}(t) + {}^I_G\mathbf{R}(t) {^G\mathbf{g}} + \mathbf{b}_{a}(t) + \mathbf{n}_{{a}}(t)
\f}

where \f${}^I\boldsymbol{\omega}\f$ and \f${}^I\mathbf{a}\f$ are the true rotational velocity and translational
acceleration in the IMU local frame \f$\{I\}\f$, 
\f$\mathbf{b}_{g}\f$ and \f$\mathbf{b}_{a}\f$ are the gyroscope and accelerometer biases, and \f$\mathbf{n}_{{g}}\f$
\f$\mathbf{n}_{{a}}\f$ are white Gaussian noise,
\f${^G\mathbf{g}} = [ 0 ~~ 0 ~~ 9.81 ]^\top\f$ is the gravity expressed in the global frame  \f$\{G\}\f$
(noting that the gravity is slightly different on different locations of the globe),
and \f$^I_G\mathbf{R}\f$ is the rotation matrix from global to IMU local frame.

A more complete and complex model which also takes into account the intrinsic properties of the IMU can be considered.
[MEMS IMU](https://en.wikipedia.org/wiki/Vibrating_structure_gyroscope#MEMS_gyroscopes) typically have non-perfect readings which would invalidate the above equations.
We can define additional sensor frames \f$\{w\}\f$ and \f$\{a\}\f$ which can be related back to the "ideal" inertial frame \f$\{I\}\f$ that we wish to estimate.
Thus we can define the following:

\f{align*}{
{}^w\boldsymbol{\omega}_{m}(t) & =
    \mathbf{T}_{w} {}^w_I\mathbf{R} {}^I\boldsymbol{\omega}(t) +
    \mathbf{T}_{g} {}^I\mathbf{a}(t) + \mathbf{b}_g(t) + \mathbf{n}_g(t)  \\
{}^a\mathbf{a}_{m}(t) & = \mathbf{T}_a {}^a_I\mathbf{R}
    ({}^I\mathbf{a}(t) + {}^I_G\mathbf{R}(t) {^G\mathbf{g}})
    + \mathbf{b}_a(t) + \mathbf{n}_a(t)
\f}

where \f$\mathbf{T}_{w}\f$ and \f$\mathbf{T}_a\f$ are invertible \f$3\times3\f$ matrices which represent the
scale imperfection and axis misalignment for \f$\{w\}\f$ and \f$\{a\}\f$, respectively.
\f${}^w_I\mathbf{R}\f$ and \f${}^a_I\mathbf{R}\f$ denote the rotation from the base "inertial" frame \f$\{I\}\f$ to
the gyroscope and acceleration sensor frames.
\f$\mathbf{T}_g\f$ denotes the gravity sensitivity, which represents the effects of gravity to the
gyroscope readings due to its inherent inertia.
Note that this does not take into account the translation between the
gyroscope and accelerometer frames, since it is negligible for most MEMS IMUs (see @cite Li2014ICRA @cite Schneider2019Sensor).



@m_class{m-block m-warning}

@par Calibration of Inertial Intrinsics
It is important to note that calibration of inertial intrinsics introduces many additional degrees of freedoms into the state.
Without picking a confident prior distribution for these, the initial trajectory needs to ensure sufficient excitation to enable
calibration and avoid degeneracies.
As found in @cite Yang2020RSS @cite Yang2023TRO there are many trajectories (e.g. planar, 1-axis, constant meas, etc..)
which can hurt inertial intrinsic calibration.
In general we *do not* recommend calibration (but still do it offline!), unless you know your trajectory will
have good excitation (e.g. dynamic handheld).
The full background, summary, and analysis of different inertial models can be found in @cite Yang2020RSS @cite Yang2023TRO.





@section ins_state Inertial State Vector

We define our INS state vector \f$\mathbf{x}_I\f$ at time \f$t\f$ as:

\f{align*}{
\mathbf{x}_I(t) =
\begin{bmatrix}
^I_G\bar{q}(t) \\
^G\mathbf{p}_I(t) \\
^G\mathbf{v}_I(t)\\
\mathbf{b}_{{g}}(t) \\
\mathbf{b}_{{a}}(t)
\end{bmatrix}
\f}

where \f$^I_G\bar{q}\f$ is the unit quaternion representing the rotation global to IMU frame,
\f$^G\mathbf{p}_I\f$ is the position of IMU in global frame,
and \f$^G\mathbf{v}_I\f$ is the velocity of IMU in global frame.
We will often write time as a subscript of \f$I\f$ describing the state of IMU at the time
for notation clarity (e.g.,  \f$^{I_t}_G\bar{q} = \text{}^I_G\bar{q}(t)\f$).
In order to define the IMU error state, the standard additive error definition is employed
for the position, velocity, and biases, 
while we use the quaternion error state \f$\delta \bar{q}\f$ with a left quaternion multiplicative error
\f$\otimes\f$:

\f{align*}{
    ^I_G\bar{q} &= \delta \bar{q} \otimes \text{}^I_G \hat{\bar{q}}\\
    \delta \bar{q} &= \begin{bmatrix}
    \hat{\mathbf{k}}\sin(\frac{1}{2}\tilde{\theta})\\
    \cos(\frac{1}{2}\tilde{\theta}) \end{bmatrix}
    \simeq
    \begin{bmatrix}
    \frac{1}{2}\tilde{\boldsymbol{\theta}}\\ 1
    \end{bmatrix}
\f}

where \f$\hat{\mathbf{k}}\f$ is the rotation axis and \f$\tilde{\theta}\f$ is the rotation angle.
For small rotation, the error angle vector is approximated by \f$\tilde{\boldsymbol{\theta}} = \tilde{\theta}~\hat{\mathbf{k}}\f$ 
as the error vector about the three orientation axes.
The total IMU error state thus is defined as the following 15x1 (not 16x1) vector:

\f{align*}{
\tilde{\mathbf{x}}_I(t) =
\begin{bmatrix}
^I_G\tilde{\boldsymbol{\theta}}(t) \\
^G\tilde{\mathbf{p}}_I(t) \\
^G\tilde{\mathbf{v}}_I(t)\\
\tilde{\mathbf{b}}_{{g}}(t) \\
\tilde{\mathbf{b}}_{{a}}(t)
\end{bmatrix}
\f}





@section imu_kinematic IMU Kinematic Equations

The IMU state evolves over time as follows
(see [Indirect Kalman Filter for 3D Attitude Estimation](http://mars.cs.umn.edu/tr/reports/Trawny05b.pdf) @cite Trawny2005TR).

\f{align*}{
    ^I_G\dot{\bar{q}}(t)
    &= \frac{1}{2} \begin{bmatrix} -\lfloor {}^{I}\boldsymbol{\omega}(t) \times \rfloor
    && {}^{I}\boldsymbol{\omega}(t) \\
    -{}^{I}\boldsymbol{\omega}(t)^\top && 0 \end{bmatrix}   \text{}^{I_{t}}_{G}\bar{q}\\
    &\triangleq \frac{1}{2} \boldsymbol{\Omega}({}^{I}\boldsymbol{\omega}(t))  \text{}^{I_{t}}_{G}\bar{q}\\
    ^G\dot{\mathbf{p}}_I(t) &=\text{} ^G\mathbf{v}_I(t)\\
    ^G\dot{\mathbf{v}}_I(t) &=\text{} ^{I_{t}}_G\mathbf{R}^\top {}^{I}\mathbf{a}(t) \\
     \dot{\mathbf{b}}_{\mathbf{g}}(t) &= \mathbf{n}_{wg}(t) \\
     \dot{\mathbf{b}}_{\mathbf{a}}(t) &= \mathbf{n}_{wa}(t)
\f}

where we have modeled the gyroscope and accelerometer biases as random walk
and thus their time derivatives are white Gaussian.
Note that the above kinematics have been defined in terms of the *true* acceleration and
angular velocities which can be computed as a function of the sensor measurements and state.




@section conti_prop Continuous-time Inertial Integration

Given the continuous-time \f${}^{I}\boldsymbol{\omega}(t)\f$
and \f${}^{I}\mathbf{a}(t)\f$, in the time interval \f$t \in [t_k,t_{k+1}]\f$,
and their estimates, i.e. after taking the expectation,
\f${}^{I}\hat{\boldsymbol{\omega}}(t)\f$ and \f${}^{I}\hat{\boldsymbol{a}}(t)\f$,
we can define the solutions to the above IMU kinematics differential equation.

\f{align*}{
    {}^{I_{k+1}}_{G}\mathbf{R} & =
    \exp \left(-\int^{t_{k+1}}_{t_k} {}^{I}\boldsymbol{\omega}(t_\tau) ~ d \tau \right) {}^{I_k}_{G}\mathbf{R} \\
    &\triangleq \Delta \mathbf{R}_k ~{}^{I_k}_{G}\mathbf{R} = {}^{I_{k+1}}_{I_k}\mathbf{R} ~{}^{I_k}_{G}\mathbf{R}  \\
    {}^G\mathbf{p}_{I_{k+1}} & =
    {}^G\mathbf{p}_{I_k} + {}^G\mathbf{v}_{I_k}\Delta t_k +
    {}^{I_k}_{G}\mathbf{R}^\top
    \int^{t_{k+1}}_{t_k} \int^{s}_{t_k} {}^{I_k}_{I_\tau}\mathbf{R} {}^{I} \mathbf{a}(t_\tau) ~ d \tau d s
    - \frac{1}{2}{}^G\mathbf{g}\Delta t^2_k \\
    &\triangleq
    {}^G\mathbf{p}_{I_k} + {}^G\mathbf{v}_{I_k}\Delta t_k +
    {}^{I_k}_{G}\mathbf{R}^\top \Delta \mathbf{p}_{k}
    - \frac{1}{2}{}^G\mathbf{g}\Delta t^2_k  \\
    {}^G\mathbf{v}_{I_{k+1}} & = {}^G\mathbf{v}_{I_k} +
    {}^{I_k}_{G}\mathbf{R}^\top
    \int^{t_{k+1}}_{t_k}
    {}^{I_k}_{I_\tau}\mathbf{R} {}^{I} \mathbf{a}(t_\tau) ~ d \tau
    - {}^G\mathbf{g}\Delta t_k \\
    &\triangleq {}^G\mathbf{v}_{I_k} +
    {}^{I_k}_{G}\mathbf{R}^\top \Delta \mathbf{v}_{k}
    - {}^G\mathbf{g}\Delta t_k \\
    \mathbf{b}_{g_{k+1}} & = \mathbf{b}_{g_{k}} + \int^{t_{k+1}}_{t_k} \mathbf{n}_{wg}(t_\tau) ~ d \tau \\
    \mathbf{b}_{a_{k+1}} & = \mathbf{b}_{a_{k}} + \int^{t_{k+1}}_{t_k} \mathbf{n}_{wa}(t_\tau) ~ d \tau
\f}

where \f$\Delta t_k = t_{k+1} - t_{k}\f$,
\f${}^{I_k}_{I_\tau}\mathbf{R} = \exp(\int^{t_\tau}_{t_k} {}^{I}\boldsymbol{\omega}(t_u) ~ d u ) \f$,
\f$\exp(\cdot)\f$ is the \f$SO(3)\f$ matrix exponential @cite Chirikjian2011, and vectors are evaluated at
their subscript timesteps (e.g. \f${}^G\mathbf{v}_{I_k}={}^G\mathbf{v}_{I}(t_k)\f$).
The biases are corrupted by random walk noises \f${\mathbf{n}}_{wg}\f$ and \f${\mathbf{n}}_{wa}\f$  that are zero-mean white Gaussians.
We have the following integration components:

\f{align*}{
    \Delta \mathbf{R}_k & \triangleq
    {}^{I_{k+1}}_{I_k}\mathbf{R}
    =  \exp
    \left(-\int^{t_{k+1}}_{t_{k}} {}^{I}\boldsymbol{\omega}(t_\tau) ~ d \tau\right)
    \\
    \Delta \mathbf{p}_{k} & \triangleq
    \int^{t_{k+1}}_{t_{k}} \int^{s}_{t_{k}} {}^{I_k}_{I_\tau}\mathbf{R} {}^{I} \mathbf{a}(t_\tau) ~ d \tau d s
    \\
    \Delta \mathbf{v}_{k} & \triangleq
    \int^{t_{k+1}}_{t_{k}}
    {}^{I_k}_{I_\tau}\mathbf{R} {}^{I} \mathbf{a}(t_\tau) ~ d \tau
\f}



@section prop_integration Mean and Uncertainty Integration

Having defined the general equations for state evolution, we can now look into how to actually perform these integrations.
The following two documents detail two different ways to both evolve the state forward and its covariance.
The first is a simple discrete state evolution model without any IMU intrinsics and can be helpful to understand the general flow of derivation.
The second is the full continuous-time integration (with constant measurement assumption) of the mean and state covariance.

-   @subpage propagation_discrete --- Simplified discrete mean and covariance propagation derivations
-   @subpage propagation_analytical --- Analytical mean and covariance propagation with IMU intrinsics derivations

For general background on how to formulate the evolution of states over time we can make a few recommendations.
For classical linear systems we can recommend Maybeck's @cite Maybeck1982STOC Volume 1 and Bar-Shalom et al. @cite Bar2001 discussion of estimator consistency.
For background on Kalman filtering and propagation with similar notation to ours we can recommend Farrell's @cite Farrell2008 aided navigation book.
Finally, for the inertial problem formulation and equations Chatfield's @cite Chatfield1997 fundamental remains foundational.




*/